<?xml version="1.0" encoding="UTF-8" ?>
<Configuration>

  <!--
    配置全局通用属性
  -->
  <properties>
    <property name="logDir">logs</property>
  </properties>

  <!--配置Appender-->
  <Appenders>

    <!--配置控制台输出-->
    <Console name="consoleAppender" target="SYSTEM_ERR">
    </Console>

    <!--配置文件输出-->
    <File name="fileAppender" fileName="${logDir}/log4j2.log">
      <!--配置文件输出格式-->
      <patternLayout>
        <pattern>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n</pattern>
      </patternLayout>
    </File>

    <!--

        按照指定规则拆分日志文件

        fileName: 日志文件的名字
        filePattern：日志文件拆分后文件的命名规则
            $${date:yyyy-MM-dd}：根据日期当天，创建一个文件夹
            2025-01-01这个文件夹，记录当天的所有日志信息(拆分出来的日志，放在这个文件夹中)
            2025-01-02这个文件夹，记录当天的所有日志信息(拆分出来的日志，放在这个文件夹中)

            rollinglog-%d{yyyy-MM-dd HH:mm:ss.SSS}-%i.log
            文件命名的规则：%i是序号，从0开始，为了让每一份文件名字不会重复

    -->
    <RollingFile name="rollingFile" fileName="${logDir}/rollinglog.log"
                 filePattern="${logDir}/$${date:yyyy-MM-dd}/rollinglog-%d{yyyy-MM-dd-HH-mm}-%i.log">

      <!--日志消息格式-->
      <patternLayout>
        <pattern>[%-5level] %d{yyyy-MM-dd HH:mm:ss.SSS} %m%n</pattern>
      </patternLayout>

      <Policies>
        <!--在系统启动时，触发拆分规则，产生一个日志文件-->
        <OnStartupTriggeringPolicy/>

        <!--按照文件的大小进行拆分-->
        <SizeBasedTriggeringPolicy size="10KB"/>

        <!--按照时间节点进行拆分 拆分规则就是filePattern -->
        <TimeBasedTriggeringPolicy/>
      </Policies>

      <!--在同一目录下，文件的个数限制，如果超出了设置的数值，则根据时间进行覆盖，新的覆盖旧的规则-->
      <DefaultRolloverStrategy max="30"/>
    </RollingFile>

    <!--配置异步日志-->
    <Async name="myAsync">

        <!--将控制台输出做异步操作-->
        <appenderRef ref="consoleAppender"/>
    </Async>

    
  </Appenders>




  <!--配置logger-->
  <Loggers>
    <!--配置rootlogger-->
    <Root level="trace">
      <!--引用Appender-->
      <AppenderRef ref="consoleAppender"/>
      <!--<AppenderRef ref="fileAppender"/>-->
      <!--<AppenderRef ref="rollingFile"/>-->
      <!--<AppenderRef ref="myAsync"/>-->
    </Root>

    <!--自定义logger,异步logger-->
    <!--将控制台输出consoleAppender，设置为异步打印-->
    <!--
        includeLocation="false"
        表示去除日志记录中的行号信息，这个行号信息非常的影响日志记录的效率（生产中都不加这个行号）
        严重的时候可能记录的比同步的日志效率还要低

        additivity="false"
        表示不继承rootlogger

    -->
    <!--<AsyncLogger name="com.clearlove" level="trace" includeLocation="false" additivity="false">-->


    <!--  <AppenderRef ref="consoleAppender"/>-->

    <!--</AsyncLogger>-->
  </Loggers>
</Configuration>